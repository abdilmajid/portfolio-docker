versions: "3.8"
services:

  homepage:
    build: ./personalwebsite
    container_name: homepage
    restart: unless-stopped
    ports:
      - '3002:3002'
    networks: 
      - store-network
      # - face-network
    # volumes:
    #   - ./personalwebsite:/app:Z
    #   - /app/node_modules
    
  store-web:
    build: ./storeapp/store-web
    container_name: store-web
    # restart: unless-stopped
    ports:
      - '4000:4000'
    # volumes:
    #   - ./storeapp/store-web:/app:Z
    #   - /app/node_modules
    networks: 
      - store-network

  store-api:
    build: ./storeapp/store-api
    container_name: store-api
    # restart: unless-stopped
    ports:
      - '4001:4001'
    # volumes:
    #   - ./storeapp/store-api:/app:Z
    #   - /app/node_modules
    depends_on:
      - store-db
    networks: 
      - store-network

  store-db:
    build: ./storeapp/store-db
    container_name: store-db
    restart: unless-stopped
    ports:
      - '5433:5432'
    networks: 
      - store-network
    volumes:
    # here we create and link persistant postgres database, so if image is deleted the data is not lost
      - db:/var/lib/postgresql/data:Z
    # here we create our initial tables
      # - ./store-db/store.sql:/docker-entrypoint-initdb.d/create_tables.sql
    
  nginx:
    build: ./nginx
    container_name: nginx
    # restart: unless-stopped
    ports:
      - '80:80'
    depends_on:
      - store-web
      - store-api
    networks: 
      - store-network

volumes:
  db:
    driver: local

networks: 
  store-network:
    driver: bridge
  # face-network:
  #   driver: bridge
